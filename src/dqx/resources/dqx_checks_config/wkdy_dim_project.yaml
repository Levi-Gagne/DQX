# dqx_rules_config/wkdy_dim_project.yaml

# Enforce uniqueness of project_key across the table (dataset-level)
- table_name: de_prd.gold.wkdy_dim_project
  name: project_key_is_not_unique
  criticality: warn
  run_config_name: default
  check:
    function: is_unique
    arguments:
      columns: [project_key]

# project_key must not be null (row-level)
- table_name: de_prd.gold.wkdy_dim_project
  name: project_key_is_null
  criticality: warn
  run_config_name: default
  check:
    function: is_not_null
    arguments:
      column: project_key

# project_status must not be null (row-level)
- table_name: de_prd.gold.wkdy_dim_project
  name: project_status_is_null
  criticality: warn
  run_config_name: default
  check:
    function: is_not_null
    arguments:
      column: project_status

# project_status must be from allowed set (row-level)
- table_name: de_prd.gold.wkdy_dim_project
  name: project_status_is_new_value
  criticality: warn
  run_config_name: default
  check:
    function: is_in_list
    arguments:
      column: project_status
      allowed:
        - Active
        - Closed
        - Pending Close
        - Schedule Pending
        - Suspended

# project_type_name must not be null or 'Unknown'
- table_name: de_prd.gold.wkdy_dim_project
  name: project_type_is_not_null_or_unknown
  criticality: warn
  run_config_name: default
  check:
    function: sql_expression
    arguments:
      expression: "project_type_name is not null AND project_type_name != 'Unknown'"

# email should match pattern (basic email format)
- table_name: de_prd.gold.wkdy_dim_project
  name: any_email_has_invalid_format
  criticality: warn
  run_config_name: default
  check:
    function: regex_match
    for_each_column:
      - project_leader_email
      - project_biller_email
      - customer_leader_email
      - customer_biller_email
    arguments:
      regex: "^(.+)@(.+)$"

# project_start_date must be <= project_end_date
- table_name: de_prd.gold.wkdy_dim_project
  name: project_start_after_end_date
  criticality: warn
  run_config_name: default
  check:
    function: sql_expression
    arguments:
      expression: "coalesce(project_start_date, '1900-01-01') <= coalesce(project_end_date, '9999-12-31')"

# first_activity_date must be <= last_activity_date
- table_name: de_prd.gold.wkdy_dim_project
  name: first_activity_date_after_last_activity_date
  criticality: warn
  run_config_name: default
  check:
    function: sql_expression
    arguments:
      expression: "coalesce(first_activity_date, '1900-01-01') <= coalesce(last_activity_date, '9999-12-31')"

# _created_date must be <= _last_updated_date
- table_name: de_prd.gold.wkdy_dim_project
  name: created_date_after_last_updated_date
  criticality: warn
  run_config_name: default
  check:
    function: sql_expression
    arguments:
      expression: "coalesce(_created_date, '1900-01-01') <= coalesce(_last_updated_date, '9999-12-31')"